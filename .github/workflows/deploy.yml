# This workflow will deploy the application to the running environment after a successful merge to main

name: deploy

on:
  workflow_run:
    workflows: [test] # Triggered by the test workflow
    types: [completed] # The test workflow must complete
    branches: [week3] # Only when main is updated

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only when test completed successfully 
    steps:
      - name: Download latest build
        uses: actions/download-artifact@v3
        with: # CoRise TODO provide the name of the artifact build in the test workflow
          name: 'flaskbb_application_artifact'

      - name: Congifure AWS Credentials
        uses: aws-actions/configure-aws-credentials
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: "eu-north-1" # CoRise TODO fill in the region that you will be using.

      - name: Upload application file to AWS
        run: aws s3 cp flaskbb_deploy-${{github.sha}}.zip s3://ilkcan-flaskbbapp # CoRise TODO filling the name of the aprlication file and the name of the bucket you created

      - name: Create new application version
        run: |  # CoRise TODO filling the name of the aprlication file and the name of the bucket you created
          aws elasticbeanstalk create-application-version \
          --application-name flaskbb \
          --source-bundle S3Bucket="ilkcan-flaskbbapp",S3Key="flaskbb_deploy-${{github.sha}}.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      # CoRise TODO fill in your_environment_name based on the environment created in terraform workflow
      - name: Deploy application
        run: aws elasticbeanstalk update-environment --environment-name flaskbb-environment --version-label "ver-${{ github.sha }}"
